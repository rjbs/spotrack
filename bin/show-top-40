#!/usr/bin/env perl
use 5.12.0;
use warnings;

use experimental qw( postderef signatures );

use utf8;
binmode *STDOUT, ':encoding(utf-8)';

use Getopt::Long::Descriptive;
use Lingua::EN::Inflect qw(ORD);
use Spudge;
use Term::ANSIColor;

my ($opt, $usage) = describe_options(
  "%c %o",
  [ 'for=s',    "whose top tracks are you getting? defaults to \$USER",
                { default => $ENV{USER} } ],
  [ 'when=s',   "which month's snapshot to get (in yyyymm format)" ],
  [ 'range=s',  "what range to get: long, medium, short; default: medium",
                { default => 'medium' } ],
);

my $Spudge  = Spudge->new;
my $token   = $Spudge->access_token;

my ($human_id) = $Spudge->dbi_connector->dbh->selectrow_array(
  q{SELECT id FROM humans WHERE name = ?},
  undef,
  $opt->for,
);

die "don't know user " . $opt->for . "\n" unless $human_id;

my $snapshot_row;
my $dbh = $Spudge->dbi_connector->dbh;

if ($opt->when) {
  $snapshot_row = $dbh->selectrow_hashref(
    q{
      SELECT *
      FROM top_tracks_snapshots
      WHERE human_id = ? AND time_range = ? AND yyyymm = ?
    },
    undef,
    $human_id,
    $opt->range,
    $opt->when,
  );
} else {
  $snapshot_row = $dbh->selectrow_hashref(
    q{
      SELECT *
      FROM top_tracks_snapshots
      WHERE human_id = ? AND time_range = ?
      ORDER BY yyyymm DESC
    },
    undef,
    $human_id,
    $opt->range . "_term",
  );
}

die "Couldn't find a snapshot!\n" unless $snapshot_row;

my $tracks = $dbh->selectall_arrayref(
  q{
    SELECT *
    FROM top_tracks_snapshot_tracks
    WHERE snapshot_id = ?
    ORDER BY position
  },
  { Slice => {} },
  $snapshot_row->{id},
);

my $up    = colored([ 'ansi46'  ], q{↑});
my $down  = colored([ 'ansi160' ], q{↓});
my $same  = colored([ 'ansi102' ], q{→});
my $new   = colored([ 'ansi226' ], q{⭑});

RANGE: for my $track (@$tracks) {
  my $movement = ! defined $track->{last_position}            ? $new
               : $track->{last_position} > $track->{position} ? $up
               : $track->{last_position} < $track->{position} ? $down
               :                                                $same;

  my ($artist, @rest) = split /; /, $track->{artist};

  printf "%s %2i. %s by %s%s\n",
    $movement,
    $track->{position},
    colored(['ansi229'], $track->{title}),
    colored(['ansi189'], @rest ? "$artist (&c.)" : $artist),
    ($track->{run_count} > 1 ? (ORD($track->{run_count}) . " week on the chart")
                             : q{});
}
