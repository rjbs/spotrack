#!/usr/bin/env perl
use 5.12.0;
use warnings;

use utf8;
binmode *STDOUT, ':encoding(utf-8)';

use DBI;
use File::HomeDir;
use Getopt::Long::Descriptive;
use Path::Tiny;
use Spudge;
use Text::CSV_XS;

my $ROOT = Spudge->root_dir;

my $db_path = $ROOT->child("spotrack.sqlite");

my $dbh = DBI->connect(
  "dbi:SQLite:dbname=$db_path",
  undef, undef,
  { sqlite_unicode => 1 }
) or die "can't open db: $DBI::errstr\n";

my ($opt, $usage) = describe_options(
  '%c %o',
  [ 'human|h=s', "who to export",   { required => 1 } ],
  [ 'type|t=s',  "type to export",  { default => 'discover' } ],
);

my ($playlist_id) = $dbh->selectrow_array(
  "SELECT id FROM playlists WHERE human = ? AND type = ?",
  undef,
  $opt->human,
  $opt->type,
);

my $snapshots = $dbh->selectall_arrayref(
  "SELECT *
  FROM playlist_snapshots
  WHERE playlist_id = ?
  ORDER BY snapshot_time",
  { Slice => {} },
  $playlist_id,
);

my $csv = Text::CSV_XS->new;

for my $snapshot (@$snapshots) {
  my $tracks = $dbh->selectall_arrayref(
    "SELECT *
    FROM playlist_snapshot_tracks
    WHERE snapshot_id = ?
    ORDER BY position",
    { Slice => {} },
    $snapshot->{id},
  );

  for my $track (@$tracks) {
    $csv->say(\*STDOUT, [
      $snapshot->{snapshot_time},
      $track->{position},
      Encode::decode('utf-8', $track->{title}),
      Encode::decode('utf-8', $track->{artist}),
    ]);
  }
}
